<UserControl x:Class="ServiceControl.View.KIPUDZ_UCView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:ServiceControl.ViewModel"
             xmlns:conv="clr-namespace:ServiceControl.Converters"
             xmlns:local="clr-namespace:ServiceControl.View"
             mc:Ignorable="d" 
             x:Name="mainControl" 
             d:Width="1000" d:Height="600">
    <!--<UserControl.DataContext>
        <vm:KIPM5_UCViewModel/>
    </UserControl.DataContext>-->

    <UserControl.Resources>

        <conv:ColorFlagConverter x:Key="ColorFlagConverter"/>
        <!--<conv:StabModeVisibleConverter x:Key="StabModeVisibleConverter"/>-->
        <!--<conv:ValidateValue x:Key="ValidateValue"/>-->
        <!--<conv:StatusDKConverter x:Key="StatusDKConverter"/>-->

        <Style TargetType="GroupBox">
            <Style.Setters>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="FontSize" Value="15"/>
            </Style.Setters>
        </Style>
        
        
        <Style TargetType="DataGridCell" x:Key="CellRight">
            <Style.Setters>
                <Setter Property="TextBlock.TextAlignment" Value="Right" />
                <Setter Property="Background" Value="White"/>
            </Style.Setters>
        </Style>


        <!--<Style TargetType="Image" x:Key="OutImageStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.device.DistanceMode.ValueBool, ElementName=mainControl}" Value="false">
                    <Setter Property="Opacity" Value="0.2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.device.DistanceMode.ValueBool, ElementName=mainControl}" Value="true">
                    <Setter Property="Opacity" Value="1"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->


        <!--<Style TargetType="fa:ImageAwesome" x:Key="faStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.device.DistanceMode.ValueBool, ElementName=mainControl}" Value="false">
                    <Setter Property="Foreground" Value="Silver"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.device.DistanceMode.ValueBool, ElementName=mainControl}" Value="true">
                    <Setter Property="Foreground" Value="DarkSlateBlue"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->


        <!--<DataTemplate x:Key="ItemsControlItemTemplate1">
            <Grid x:Name="grid">
                <Rectangle x:Name="rect" Fill="Silver" Height="50" Margin="0" Stroke="Black" Width="26" />
                <Rectangle Height="48" Margin="0" Stroke="White" Width="24"/>
                <TextBlock x:Name="font" FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" 
                            ToolTip="{Binding ToolTip}"
                           Text="{Binding Number}"/>

                <Image 
                       VerticalAlignment="Bottom" Width="16" Height="16" Margin="0,6">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Value}" Value="0">
                                    <Setter Property="ToolTip" Value="{DynamicResource On}"/>
                                    <Setter Property="Source" Value="../Resources/greenLed.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Value}" Value="1">
                                    <Setter Property="ToolTip" Value="{DynamicResource Off}"/>
                                    <Setter Property="Source" Value="../Resources/blackLed.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Value}" Value="2">
                                    <Setter Property="ToolTip" Value="{DynamicResource Absent}"/>
                                    <Setter Property="Source" Value="../Resources/Absent.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Value}" Value="3">
                                    <Setter Property="ToolTip" Value="{DynamicResource Crash}"/>
                                    <Setter Property="Source" Value="../Resources/attention.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Value}" Value="2">
                    <Setter Property="Fill" Value="Gray" TargetName="rect"/>
                    <Setter Property="Foreground" Value="White" TargetName="font"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>-->
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="410"/>
            <RowDefinition Height="120"/>
            <RowDefinition Height="170"/>
            <!--<RowDefinition Height="40"/>
            <RowDefinition Height="90"/>
            <RowDefinition Height="100"/>-->
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="480"/>
            <ColumnDefinition Width="520"/>
            <!--<ColumnDefinition Width="330"/>-->
        </Grid.ColumnDefinitions>


        <!-- Параметры -->
        <Border  Margin="4,0" Grid.Row="0" Grid.Column="1" Grid.RowSpan="1" Grid.ColumnSpan="1">
            <GroupBox >
                <GroupBox.Header>
                    <TextBlock Text="Отправляемые параметры" FontSize="16" FontWeight="Bold"/>
                </GroupBox.Header>
                <DockPanel>
                    <Button Content="Записать для передачи" DockPanel.Dock="Top" Background="Bisque" Style="{StaticResource ButtonStyle1}"
                            VerticalAlignment="Center" Margin="4" Command="{Binding WriteValueCommand}"/>
                    <Border DockPanel.Dock="Bottom">
                        <GroupBox Header="Регистр флагов" ToolTip="{Binding device.FlagsAlarm.ToolTip}">
                            <UniformGrid Margin="10,10">
                                <CheckBox Content="вскрытие" IsChecked="{Binding isOpenSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="сумм.потенциал" IsChecked="{Binding isSumPotSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="пол.потенциал" IsChecked="{Binding isPolPotSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="ток поляризации" IsChecked="{Binding isCurrPolSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="напряжение т/р" IsChecked="{Binding isVoltageTRSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="дренажный ток" IsChecked="{Binding isCurrDrenazhSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="сопротивление т/р" IsChecked="{Binding isResistTRSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="напряжение пит." IsChecked="{Binding isVoltageSet}" Padding="4,-5,0,5"/>
                                <CheckBox Content="температура" IsChecked="{Binding isTemperaturSet}" Padding="4,-5,0,5"/>
                            </UniformGrid>
                        </GroupBox>
                    </Border>

                    <StackPanel Margin="8,0" Orientation="Vertical" >

                        <!--Запись реального времени-->
                        <ItemsControl ItemsSource="{Binding ListRealTime}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Width="280" TextAlignment="Right" 
                               VerticalAlignment="Top"/>
                                        <TextBox Text="{Binding RealTimeValue, StringFormat=\{0:G\}, TargetNullValue=--}" 
                                 Width="150" ToolTip="{Binding ToolTip}" Margin="4,1" />
                                        <!--<Button Width="30" Margin="1" VerticalAlignment="Top" ToolTip="{DynamicResource SetCurrTime}"
                                 Style="{StaticResource ButtonStyle1}"
                                            Padding="3" Command="{Binding DataContext.WriteTimeCommand, ElementName=mainControl}">
                                        <Image Source="/Resources/Logout.png" Width="16" Height="16" Style="{StaticResource OutImageStyle}"/>
                                    </Button>-->
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <ItemsControl ItemsSource="{Binding ListInput}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Width="280" />
                                        <TextBox Text="{Binding Value, TargetNullValue=--}" Width="64" IsReadOnly="False" Margin="4,1" ToolTip="{Binding ToolTip}" />
                                        <TextBlock Text="{Binding Measure}" Width="40" Margin="2,2,0,0" TextAlignment="Left"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <ItemsControl ItemsSource="{Binding ListInputMM}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Register1.Name}" TextWrapping="Wrap" Width="280"/>
                                        <TextBox Text="{Binding Register1.Value, TargetNullValue=--}" Width="64"
                                                  Style="{DynamicResource TextBox.Control}"
                                        Margin="4,0" ToolTip="{Binding Register1.ToolTip}"/>
                                        <TextBlock Text="-" VerticalAlignment="Top" Width="10" Margin="2,2,0,0" TextAlignment="Center"/>

                                        <TextBox Text="{Binding Register2.Value, TargetNullValue=--}" Width="64" 
                                        Margin="4,0" ToolTip="{Binding Register2.ToolTip}" Style="{DynamicResource TextBox.Control}" 
                                             TabIndex="2">
                                        </TextBox>
                                        <TextBlock Text="{Binding Register1.Measure}" VerticalAlignment="Top" Width="26"
                                                   TextAlignment="Left" Margin="2,2,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!--Температура и Ток поляризации-->
                        <!--<ItemsControl ItemsSource="{Binding ListInput2}" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Width="250" />
                                    <TextBox Text="{Binding Value, TargetNullValue=-}" Width="64" Margin="4,1" ToolTip="{Binding ToolTip}" />
                                    <TextBlock Text="{Binding Measure}" Width="20" Margin="2,2,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>-->
                    </StackPanel>

                </DockPanel>
            </GroupBox>

        </Border>



            <!--Управляемые параметры -->
        <Border  Margin="4,0" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="1">
            <!--<Border.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="8" Opacity="0.5"/>
            </Border.Effect>-->
            <GroupBox >
                <GroupBox.Header>
                    <TextBlock Text="Полученные параметры" FontSize="16" FontWeight="Bold"/>
                </GroupBox.Header>
                <StackPanel Margin="8,0" Orientation="Vertical">

                    <!--Время работы и защиты-->
                    <ItemsControl ItemsSource="{Binding ListHolding}" Margin="0,8,0,0" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" TextWrapping="Wrap" Width="310"/>
                                    <TextBox Text="{Binding Value,StringFormat=0.##, TargetNullValue=--}" Width="64"
                                        Margin="4,0" ToolTip="{Binding ToolTip}"/>
                                    <TextBlock Text="{Binding Measure}" VerticalAlignment="Top" Width="64" Margin="2,2,0,0" TextAlignment="Left" />
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <UniformGrid Columns="3" Rows="3" Margin="50, 20" ToolTip="{Binding device.Flags.ToolTip}">
                        <UniformGrid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="11"/>
                                <Setter Property="TextAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="LightGreen"/>
                                <Setter Property="BorderBrush" Value="Gray"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="CornerRadius" Value="2"/>
                                <Setter Property="Height" Value="28"/>
                            </Style>
                        </UniformGrid.Resources>

                        <Border Background="{Binding isOpen, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="вскрытие" />
                        </Border>
                        <Border Background="{Binding isSumPot, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="cумм.потенциал" />
                        </Border>
                        <Border  Background="{Binding isPolPot, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="пол.потенциал"/>
                        </Border>
                        <Border Background="{Binding isCurrPol, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="ток поляризации" />
                        </Border>
                        <Border Background="{Binding isVoltageTR, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="напряжение т/р" />
                        </Border>
                        <Border Background="{Binding isCurrDrenazh, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="дренажный ток" />
                        </Border>
                        <Border Background="{Binding isResistTR, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="сопротивление т/р" />
                        </Border>
                        <Border Background="{Binding isVoltage, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="напряжение пит." />
                        </Border>
                        <Border Background="{Binding isTemperatur, Converter={StaticResource ColorFlagConverter}}">
                            <TextBlock Text="температура" />
                        </Border>
                    </UniformGrid>
                </StackPanel>
            </GroupBox>
        </Border>




        <!--Архивные параметры-->
        <Border Margin="4,0" Grid.Column="1" Grid.Row="1"  Grid.RowSpan="1" >
            <GroupBox >
                <GroupBox.Header>
                    <TextBlock Text="Архивные параметры" FontSize="16" FontWeight="Bold"/>
                </GroupBox.Header>
                <DataGrid ItemsSource="{Binding device.listArchive}" AutoGenerateColumns="False"
                          IsReadOnly="True" FontSize="12" Style="{StaticResource DataGridStyle}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="время" Binding="{Binding time}"/>

                        <DataGridTemplateColumn Header="напряж. т/р">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding VoltageTRa.Value,StringFormat=0.00}" ToolTip="{Binding VoltageTRa.ToolTip}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="ток т/р">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CurrTRa.Value,StringFormat=0.00}" ToolTip="{Binding CurrTRa.ToolTip}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="инд.левый БИТ">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding IndicBITLefta.Value,StringFormat=0.00}" ToolTip="{Binding IndicBITLefta.ToolTip}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn Header="инд.правый БИТ">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding IndicBITRighta.Value,StringFormat=0.00}" ToolTip="{Binding IndicBITRighta.ToolTip}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>

            </GroupBox>
        </Border>



    </Grid>
</UserControl>
